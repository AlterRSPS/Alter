plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.21' apply(false)
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.31'
}

apply from: 'gradle/properties.gradle'
apply from: 'gradle/wrapper.gradle'

allprojects {
    apply plugin: 'idea'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    apply from: "$rootDir/gradle/kotlin.gradle"

    group = 'alter'
    version = '0.0.4'

    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url 'https://jitpack.io' }
    }

    configurations {
        ktlint
    }

    dependencies {
        ktlint "com.github.shyiko:ktlint:0.15.0"

        compile 'com.sparkjava:spark-core:2.3'
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
        compile "io.github.microutils:kotlin-logging:$kloggingVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$yamlVersion"
        compile "org.postgresql:postgresql:42.2.2"
        compile "mysql:mysql-connector-java:5.1.46"
        compile "com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre7"
        compile 'org.json:json:20220320'

        implementation "org.mindrot:jbcrypt:$bcryptVersion"
        implementation "com.google.code.gson:gson:$gsonVersion"
        implementation "com.github.runelite.runelite:cache:$runeliteVersion"
        implementation "io.netty:netty-all:$nettyVersion"
        implementation 'org.apache.commons:commons-lang3:3.0'

        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("${project.buildDir}/classes/kotlin/main")
            testOutputDir = file("${project.buildDir}/classes/kotlin/test")
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = jvmVersion
        }
    }
}

task packageServer(type: Zip) {
    archiveFileName = "Alter.zip"
    destinationDirectory = file('.')

    from('./') {
        include 'gradlew'
        include 'gradlew.bat'

        include 'build.gradle'
        include 'settings.gradle'

        include 'LICENSE'
        include 'README.md'

        include 'management-interface'

        include 'first-launch-template'
        rename 'first-launch-template', 'first-launch'
    }

    from ('gradle/') {
        into ('gradle')
    }

    from('data/') {
        into 'data'
        exclude 'cache'
        exclude 'rsa'
        exclude 'saves'
        exclude 'xteas'
        exclude 'xteas.json'
    }

    from('game/') {
        into 'game'

        exclude 'build'
        exclude 'out'
        exclude 'plugins'
        exclude 'src/main/java'
        exclude 'src/test/java'
    }

    from('game/plugins') {
        into 'game/plugins'

        include 'src/main/kotlin/gg/rsmod/plugins/api/**'
        include 'src/main/kotlin/gg/rsmod/plugins/content/osrs.kts'
        include 'src/main/kotlin/gg/rsmod/plugins/service/**'
    }

    from('net/') {
        into 'net'

        exclude 'build'
        exclude 'out'
        exclude 'src/main/java'
        exclude 'src/test/java'
    }

    from('tools/') {
        into 'tools'

        exclude 'build'
        exclude 'out'
        exclude 'src/main/java'
        exclude 'src/test/java'
    }

    from('util/') {
        into 'util'

        exclude 'build'
        exclude 'out'
        exclude 'src/main/java'
        exclude 'src/test/java'
    }
}

task packageLibs(type: Zip) {
    archiveFileName = "Alter-libs.zip"
    destinationDirectory = file('.')

    from('game/build/libs/') {
        rename "game-${project.version}.jar", "game.jar"
    }

    from('game/plugins/build/libs/') {
        rename "plugins-${project.version}.jar", "plugins.jar"
    }
}